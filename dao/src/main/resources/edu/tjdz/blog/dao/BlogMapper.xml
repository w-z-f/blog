<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.tjdz.blog.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="edu.tjdz.blog.beans.bean.Blog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 25 14:17:15 CST 2021.
    -->

    <result column="blog_id" javaType="java.lang.Integer" jdbcType="INTEGER" property="blogId" />
    <result column="source" javaType="java.lang.Integer" jdbcType="INTEGER" property="source" />
    <result column="recommended" javaType="java.lang.Integer" jdbcType="INTEGER" property="recommended"  />
    <result column="reward" javaType="java.lang.Integer" jdbcType="INTEGER" property="reward"/>
    <result column="info" javaType="java.lang.Integer" jdbcType="INTEGER" property="info"/>
    <result column="is_comment" javaType="java.lang.Integer" jdbcType="INTEGER" property="isComment" />
    <result column="comment_id" javaType="java.lang.Integer" jdbcType="INTEGER" property="commentId" />
    <result column="view_num" javaType="java.lang.Integer" jdbcType="INTEGER" property="viewNum"/>
    <result column="cre_time" javaType="java.util.Date" jdbcType="TIMESTAMP" property="creTime"/>
    <result column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="published" javaType="java.lang.Integer" jdbcType="INTEGER" property="published"/>
    <association javaType="Users" property="users" column="user_id"  select="edu.tjdz.blog.dao.UsersMapper.getUserByUserId" ></association>
    <association javaType="Article" property="article" column="article_id" select="edu.tjdz.blog.dao.ArticleMapper.getArticleByArticleId"></association>
    <association javaType="Type" property="type" column="type_id"  select="edu.tjdz.blog.dao.TypeMapper.getTypeByTypeId"></association>
    <collection property="tags" column="tags_id" ofType="Tag"  select="edu.tjdz.blog.dao.TagMapper.listTagByTagIds"></collection>
    <collection property="comments" column="blog_id" select="edu.tjdz.blog.dao.CommentMapper.listCommentByArticleId"></collection>
  </resultMap>

  <select id="listAllBlog" resultMap="BaseResultMap">
    select * from blog
    <where>
    <if test="articleId != null and articleId != ''">
      and article_id in(#{articleId})
    </if>
    <if test="typeId != null and typeId !=''">
     and type_id in(#{typeId})
    </if>
    <if test="recommended != null">
      and recommended = #{recommended}
    </if>
    </where>
    order by update_time desc limit #{start},#{limit}
  </select>

  <select id="countAllBlog" resultType="Integer">
    select count(blog_id) from blog
    <where>
    <if test="articleId != null and articleId != ''">
      and article_id in(#{articleId})
    </if>
    <if test="typeId != null and typeId !=''">
      and type_id in(#{typeId})
    </if>
    <if test="recommended != null">
      and recommended = #{recommended}
    </if>
    </where>

  </select>

  <insert id="addBlog" parameterType="Blog">
    insert into blog values(#{blogId},	#{userId},	#{source},	#{articleId},	#{typeId},	#{tagsId},	#{recommended},	#{reward},	#{info},	#{isComment},	#{commentId},	#{viewNum},	#{creTime},	#{updateTime},	#{published})
  </insert>

  <select id="getArticleIdByBlogId" resultType="Integer">
    select article_id from blog where blog_id = #{blogId}
  </select>

  <delete id="deleteBlogByBlogId" parameterType="Integer">
    delete from blog where blog_id = #{blogId}
  </delete>

  <update id="updateBlogByBlogId" parameterType="Blog">
    update blog set source=	#{source},type_id =	#{typeId},tags_id =	#{tagsId},
    recommended =	#{recommended},reward =	#{reward},info =#{info},
    is_comment =#{isComment},update_time=	#{updateTime},published=#{published}
    where blog_id = #{blogId}
  </update>

  <select id="getBlogByBlogId" resultMap="BaseResultMap">
    select * from blog where blog_id = #{blogId};
  </select>

  <update   id="updateBlogVeiw" parameterType="Blog">

    <foreach collection="list" item="item">
      update blog
      set
      view_num = #{item.viewNum}
      where blog_id = #{item.blogId}
  </foreach>
  </update>

  <select id="listBlogByBlogId" resultMap="BaseResultMap">
    select * from blog where blog_id in
  <foreach collection="list" open="(" close=")" separator="," item="ids">
     #{ids}
  </foreach>
  </select>



</mapper>